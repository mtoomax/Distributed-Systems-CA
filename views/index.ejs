<!DOCTYPE html>
<html>
  <head>
    <title>gRPC Calculator</title>
    <style>
      body {
        font-family: sans-serif;
        padding: 20px;
        background: #f8f8f8;
      }

      .weather {
        max-width: 400px;
        margin: 30px auto;
        padding: 20px;
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px #ccc;
      }

      input,
      select,
      button {
        padding: 10px;
        margin: 5px 0;
        width: 100%;
      }

      h2 {
        margin-top: 0;
      }

      .logout-container {
      position: absolute;
      top: 20px;
      right: 20px;
    }

    .logout-btn {
      background: #e74c3c;
      border: none;
      color: white;
      padding: 10px 16px;
      border-radius: 6px;
      cursor: pointer;
      font-weight: bold;
      width: auto;
    }

    #live-temperature {
    transition: opacity 0.3s ease;
    color: #3498db;
    font-size: 1.5em;
    font-weight: bold;
  }
    </style>
  </head>

  <body>

    <div style="text-align: right; margin-bottom: 20px;">
      <form action="/logout" method="GET">
        <button class="logout-btn">🚪 Logout</button>
      </form>
    </div>

    <% const safeTemperature = typeof temperature !== "undefined" ? temperature : null; %>
    <% const safeError = typeof error !== "undefined" ? error : null; %>

    <!-- Weather Section -->
    <div class="weather">
      <h2>🌤 gRPC Weather</h2>
      <form action="/fetch-temperature" method="POST">
        <input type="text" name="area" required
          placeholder="Enter area (e.g., Ballyfermot)" />
        <button type="submit">Get Temperature</button>
      </form>

      <h2>📡 Live Temperature Stream</h2>
      <input type="text" id="stream-area" placeholder="Enter area (e.g., Ballyfermot)" />
      <button onclick="startStreaming()">Start Live Stream</button>
      <h3 id="live-temperature" style="margin-top: 15px;"></h3>

      <% if (safeTemperature !== null) { %>
      <h3>🌡 Temperature: <%= safeTemperature %> °C</h3>
      <% } %>

      <% if (safeError) { %>
        <div style="color: red; margin-top: 10px;"><%= safeError %></div>
      <% } %>

    </div>
<!--Start RG code-->
	<!--Signal Section-->
	<div class="weather">
		<h2>Traffic Signal Status</H2>
		<form action="/fetch-signal" method="POST">
			<input type="text" name="signalId" placeholder="Enter Junction ID e.g. Junction 5" required/>
			<button type="submit">Get Signal</button>
		</form>
		<h3>Stream Signal</h3>
		<input type="text" id="stream-signal-id" placeholder="Enter Junction ID"/>
		<button onclick="startSignalStream()">Start Streaming</button>
		<h3 id="live-signal" style="margin-top:10px; color:black; font-weight:bold;"></h3>
		<% if (signalStatus) { %>
			<p><strong>Signal:</strong><%=signalStatus.currentSignal%>|<%=signalStatus.timestamp%></p>
		<% } %>
		<% if (error) {%>
			<div style="color:red; margin-top: 10px;"><%=error%></div>
		<% } %>
		<%if (success){%>
			<div style="color: green; margin-top 10px;"><%= success %></div>
		<% } %>
		<h3>Update Signal</h3>
		<form action="/update-signal" method="POST">
			<input type="text" name="signalId" placeholder="Junction ID" required/>
			<select name="currentSignal" required>
				<option value="">Select Signal</option>
				<option value="Red">Red</option>
				<option value="Amber">Amber</option>
				<option value="Green">Green</option>
			</select>
			<button type="submit">Update Signal</button>
		</form>
	</div>
	<!--End RG code-->
  </body>

  <script>
    let eventSource;
  
    function startStreaming() {
      const area = document.getElementById("stream-area").value;
      const tempDisplay = document.getElementById("live-temperature");
  
      if (eventSource) {
        eventSource.close(); // Close any existing stream
      }
  
      eventSource = new EventSource(`/stream-temperature-sse?area=${encodeURIComponent(area)}`);
  
      eventSource.onmessage = function (event) {
        const { temperature } = JSON.parse(event.data);
  
        // Flicker effect
        tempDisplay.style.opacity = 0;
        setTimeout(() => {
          tempDisplay.textContent = `🌡 Live Temp: ${temperature.toFixed(2)} °C`;
          tempDisplay.style.opacity = 1;
        }, 200);
      };
  
      eventSource.addEventListener("error", (event) => {
        tempDisplay.textContent = "❌ Error: " + JSON.parse(event.data).error;
        eventSource.close();
      });
  
      eventSource.addEventListener("end", () => {
        tempDisplay.textContent += " ✅ Stream complete.";
        eventSource.close();
      });
    }
  //Start RG code
	let signalEventSource;
	function startSignalStream(){
		const signalId=document.getElementById("stream-signal-id").value;
		const signalDisplay=document.getElementById("live-signal");
		if (!signalId){
			signalDisplay.textContent="Please enter Junction ID.";
			return;
		}
		if (signalEventSource){
			signalEventSource.close();
		}
		signalEventSource=new EventSource(`/stream-signal-sse?signalId=${encodeURIComponent(signalId)}`);
		signalEventSource.onmessage= function (event){
			const{signalId, currentSignal, timestamp}= JSON.parse(event.data);
			signalDisplay.textContent=`${signalId}:${currentSignal}@${new Date(timestamp).toLocaleTimeString()}`;
		};
		signalEventSource.onerror= function(){
			signalDisplay.textContent="Stream Ended";
			signalEventSource.close();
		};
	}
	//End RG code
  </script>
  
</html>
